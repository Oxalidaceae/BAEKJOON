//1037 약수
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
	int a; // N의 진짜 약수의 개수
	cin >> a; // N의 진짜 약수의 개수 입력
	int* arr = new int[a + 1]; // N의 진짜 약수를 저장할 배열
	for (int i = 0; i < a; i++) { // N의 진짜 약수의 개수만큼 반복
		cin >> arr[i]; // N의 진짜 약수 입력
	}
	sort(arr, arr + a); // N의 진짜 약수를 오름차순으로 정렬
	cout << arr[0] * arr[a - 1]; // N의 진짜 약수 중 가장 작은 약수와 가장 큰 약수를 곱하여 N을 출력
	return 0; // 프로그램 종료
}

/*
    문제 설명: 1037 약수
    양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다. 어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.

    입력: 첫째 줄에 N의 진짜 약수의 개수가 주어진다. 이 개수는 50보다 작거나 같은 자연수이다. 둘째 줄에는 N의 진짜 약수가 주어진다.
    1,000,000보다 작거나 같고, 2보다 크거나 같은 자연수이고, 중복되지 않는다.

    출력: 첫째 줄에 N을 출력한다. N은 항상 32비트 부호있는 정수로 표현할 수 있다.

    풀이: 입력받은 약수들을 정렬한 후 가장 작은 약수와 가장 큰 약수를 곱하여 출력하였다.
*/