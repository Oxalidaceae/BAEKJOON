//2630 색종이 만들기
#include <iostream>
#include <vector>
using namespace std;

int white_count = 0, blue_count = 0; // 흰색, 파란색 색종이의 개수
vector<vector<int>> paper; // 색종이

void countPapers(int x, int y, int size) { // 색종이의 개수를 세는 재귀 함수
    int color = paper[x][y]; // 색종이의 색
    bool all_same = true; // 모든 색종이가 같은 색인지 확인하는 변수

    for (int i = x; i < x + size; i++) { // 색종이의 색이 모두 같은지 확인
        for (int j = y; j < y + size; j++) {
            if (paper[i][j] != color) { // 색이 다르면
                all_same = false; // 모든 색종이가 같은 색이 아님
                break; // 반복문 종료
            }
        }
        if (!all_same) break; // 색이 다르면 반복문 종료
    }

    if (all_same) { // 모든 색종이가 같은 색이면
        if (color == 0) white_count++; // 흰색이면 흰색 색종이 개수 증가
        else blue_count++; // 파란색이면 파란색 색종이 개수 증가
    }
    else { // 모든 색종이가 같은 색이 아니면
        int new_size = size / 2; // 색종이의 크기를 반으로 줄임
        countPapers(x, y, new_size); // 색종이의 개수를 세는 재귀 함수 호출(1사분면)
        countPapers(x, y + new_size, new_size); // 색종이의 개수를 세는 재귀 함수 호출(2사분면)
        countPapers(x + new_size, y, new_size); // 색종이의 개수를 세는 재귀 함수 호출(3사분면)
        countPapers(x + new_size, y + new_size, new_size); // 색종이의 개수를 세는 재귀 함수 호출(4사분면)
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
	cout.tie(NULL);

    int N; // 색종이의 한 변의 길이
    cin >> N; // 색종이의 한 변의 길이 입력
    paper.resize(N, vector<int>(N)); // 색종이의 크기만큼 벡터 생성
    for (int i = 0; i < N; i++) { // 색종이의 색 입력
        for (int j = 0; j < N; j++) {
            cin >> paper[i][j];
        }
    }
    countPapers(0, 0, N); // 색종이의 개수를 세는 재귀 함수 호출
    cout << white_count << "\n" << blue_count; // 흰색, 파란색 색종이의 개수 출력
    return 0; // 프로그램 종료
}

/*
    https://www.acmicpc.net/problem/2630

    문제 설명: 2630 색종이 만들기
    아래 <그림 1>과 같이 여러개의 정사각형칸들로 이루어진 정사각형 모양의 종이가 주어져 있고, 각 정사각형들은 하얀색으로 칠해져 있거나 파란색으로 칠해져 있다.
    주어진 종이를 일정한 규칙에 따라 잘라서 다양한 크기를 가진 정사각형 모양의 하얀색 또는 파란색 색종이를 만들려고 한다.
    전체 종이의 크기가 N×N(N=2k, k는 1 이상 7 이하의 자연수) 이라면 종이를 자르는 규칙은 다음과 같다.
    전체 종이가 모두 같은 색으로 칠해져 있지 않으면 가로와 세로로 중간 부분을 잘라서 <그림 2>의 I, II, III, IV와 같이 똑같은 크기의 네 개의 N/2 × N/2색종이로 나눈다.
    나누어진 종이 I, II, III, IV 각각에 대해서도 앞에서와 마찬가지로 모두 같은 색으로 칠해져 있지 않으면 같은 방법으로 똑같은 크기의 네 개의 색종이로 나눈다.
    이와 같은 과정을 잘라진 종이가 모두 하얀색 또는 모두 파란색으로 칠해져 있거나, 하나의 정사각형 칸이 되어 더 이상 자를 수 없을 때까지 반복한다.
    위와 같은 규칙에 따라 잘랐을 때 <그림 3>은 <그림 1>의 종이를 처음 나눈 후의 상태를, <그림 4>는 두 번째 나눈 후의 상태를, <그림 5>는 최종적으로 만들어진
    다양한 크기의 9장의 하얀색 색종이와 7장의 파란색 색종이를 보여주고 있다.
    입력으로 주어진 종이의 한 변의 길이 N과 각 정사각형칸의 색(하얀색 또는 파란색)이 주어질 때 잘라진 하얀색 색종이와 파란색 색종이의 개수를
    구하는 프로그램을 작성하시오.

    입력: 첫째 줄에는 전체 종이의 한 변의 길이 N이 주어져 있다. N은 2, 4, 8, 16, 32, 64, 128 중 하나이다. 색종이의 각 가로줄의 정사각형칸들의 색이 윗줄부터
    차례로 둘째 줄부터 마지막 줄까지 주어진다. 하얀색으로 칠해진 칸은 0, 파란색으로 칠해진 칸은 1로 주어지며, 각 숫자 사이에는 빈칸이 하나씩 있다.

    출력: 첫째 줄에는 잘라진 햐얀색 색종이의 개수를 출력하고, 둘째 줄에는 파란색 색종이의 개수를 출력한다.

    풀이: 색종이의 색이 모두 같은지 확인하고, 모두 같으면 해당 색종이의 개수를 증가시키고, 모두 같지 않으면 색종이의 크기를 반으로 줄여
    재귀적으로 확인하는 방식으로 풀이하였다.
*/